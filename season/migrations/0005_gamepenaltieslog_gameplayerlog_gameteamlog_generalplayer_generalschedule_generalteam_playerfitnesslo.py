# Generated by Django 2.0.3 on 2018-05-29 11:29

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('season', '0004_team_fullname'),
    ]

    operations = [
        migrations.CreateModel(
            name='GamePenaltiesLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DefensiveAbility', models.FloatField()),
                ('Event', models.CharField(max_length=100)),
                ('GameID', models.IntegerField()),
                ('GoalAway', models.IntegerField()),
                ('GoalHome', models.IntegerField()),
                ('Goalkeeper', models.CharField(max_length=100)),
                ('OffensiveAbility', models.FloatField()),
                ('PenaltyPlayer', models.CharField(max_length=100)),
                ('PeneltyNumber', models.CharField(max_length=100)),
                ('TeamName', models.CharField(max_length=100)),
                ('TransactionID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayerLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AreaAttack', models.CharField(max_length=100)),
                ('AreaDefence', models.CharField(max_length=100)),
                ('ChangeDefensiveEvent', models.IntegerField()),
                ('ChangeDefensivePerformance', models.IntegerField()),
                ('ChangeOffensiveEvent', models.IntegerField()),
                ('ChangeOffensivePerformance', models.IntegerField()),
                ('Chemestry', models.FloatField()),
                ('DefensivePerformance', models.FloatField()),
                ('EvenDefence', models.CharField(max_length=100)),
                ('EventAttack', models.CharField(max_length=100)),
                ('FitnessChange', models.FloatField()),
                ('GameNumber', models.IntegerField()),
                ('GameRound', models.IntegerField()),
                ('GoalAway', models.IntegerField()),
                ('GoalHome', models.IntegerField()),
                ('GoalPlayer', models.BooleanField()),
                ('LoyaltyPoints', models.FloatField()),
                ('MotivationChange', models.FloatField()),
                ('NewDefensiveAbility', models.FloatField()),
                ('NewFitness', models.FloatField()),
                ('NewMotivation', models.FloatField()),
                ('NewOffensiveAbility', models.FloatField()),
                ('OffensivePerformance', models.FloatField()),
                ('Performance', models.FloatField()),
                ('PlayerName', models.CharField(max_length=100)),
                ('Position', models.CharField(max_length=100)),
                ('RoutinePoints', models.IntegerField()),
                ('SavePlayer', models.BooleanField()),
                ('SentOff', models.BooleanField()),
                ('Team', models.CharField(max_length=100)),
                ('TeamPlayerID', models.CharField(max_length=100)),
                ('TotalChangeAbility', models.IntegerField()),
                ('TotalChangeDefensive', models.IntegerField()),
                ('TotalChangeOffensive', models.IntegerField()),
                ('Tournament', models.CharField(max_length=100)),
                ('TournanementRound', models.CharField(max_length=100)),
                ('TransactionID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GameTeamLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Area', models.CharField(max_length=100)),
                ('AttackingTeam', models.CharField(max_length=100)),
                ('AttackResult', models.CharField(max_length=100)),
                ('Away', models.CharField(max_length=100)),
                ('AwayGoalsAfterAttack', models.IntegerField()),
                ('DivisionPlaceBeforeGameAway', models.IntegerField()),
                ('DivisionPlaceBeforeGameHome', models.IntegerField()),
                ('EventPlayer', models.CharField(max_length=100)),
                ('FavoriteStatusAway', models.CharField(max_length=100)),
                ('FavoriteStatusHome', models.CharField(max_length=100)),
                ('GameNumber', models.IntegerField()),
                ('GameRound', models.IntegerField()),
                ('Home', models.CharField(max_length=100)),
                ('HomeGoalsAfterAttack', models.IntegerField()),
                ('PrestigeAway', models.FloatField()),
                ('PrestigeHome', models.FloatField()),
                ('Tactics', models.CharField(max_length=100)),
                ('TacticsValue', models.FloatField()),
                ('TeamMotivation', models.FloatField()),
                ('TeamMotivationChange', models.FloatField()),
                ('Tournament', models.CharField(max_length=100)),
                ('TournamentRound', models.CharField(max_length=100)),
                ('TransactionID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GeneralPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ability', models.FloatField()),
                ('DefensiveAbility', models.FloatField()),
                ('DivisionRank', models.IntegerField()),
                ('Fitness', models.FloatField()),
                ('GKPosExperience', models.FloatField()),
                ('AdjustmentFactor', models.FloatField()),
                ('LMPosExperience', models.FloatField()),
                ('Nation', models.CharField(max_length=100)),
                ('OffensiveAbility', models.FloatField()),
                ('PlayerChemestry', models.FloatField()),
                ('PlayerMotivation', models.FloatField()),
                ('PlayerName', models.CharField(max_length=100)),
                ('Position', models.CharField(max_length=100)),
                ('RMPosExperience', models.FloatField()),
                ('Routine', models.IntegerField()),
                ('RoutineRank', models.FloatField()),
                ('STPosExperience', models.FloatField()),
                ('Team', models.CharField(max_length=100)),
                ('TeamPlayerID', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AfterPenaltyAway', models.IntegerField()),
                ('AfterPenaltyHome', models.IntegerField()),
                ('Away', models.CharField(max_length=100)),
                ('Day', models.IntegerField()),
                ('DivisionAway', models.CharField(max_length=100)),
                ('DivisionHome', models.CharField(max_length=100)),
                ('DivisionPlaceAway', models.IntegerField()),
                ('DivisionPlaceDifference', models.IntegerField()),
                ('DivisionPlaceHome', models.IntegerField()),
                ('FavouriteStatusAway', models.CharField(max_length=100)),
                ('FavouriteStatusHome', models.CharField(max_length=100)),
                ('FocusedEvent', models.CharField(max_length=100)),
                ('GameID', models.IntegerField()),
                ('GameNumber', models.IntegerField()),
                ('GoalsAway', models.IntegerField()),
                ('GoalsHome', models.IntegerField()),
                ('Home', models.CharField(max_length=100)),
                ('Played', models.BooleanField()),
                ('PrestigeCupAway', models.FloatField()),
                ('PrestigeCupHome', models.FloatField()),
                ('PrestigePointsBasic', models.FloatField()),
                ('PrestigePointsDivisionBasic', models.FloatField()),
                ('PrestigePointsFocusedEvent', models.FloatField()),
                ('PrestigePointsRivalryAway', models.FloatField()),
                ('PrestigePointsRivalryHome', models.FloatField()),
                ('PrestigePointsTotalAway', models.FloatField()),
                ('PrestigePointsTotalHome', models.FloatField()),
                ('Round', models.CharField(max_length=100)),
                ('RoutinePoints', models.IntegerField()),
                ('SignAway', models.CharField(max_length=100)),
                ('SignHome', models.CharField(max_length=100)),
                ('TeamMotivationAway', models.FloatField()),
                ('TeamMotivationFavouriteStatusAway', models.FloatField()),
                ('TeamMotivationFavouriteStatusHome', models.FloatField()),
                ('TeamMotivationHome', models.FloatField()),
                ('TeamMotivationPreviousRoundAway', models.FloatField()),
                ('TeamMotivationPreviousRoundHome', models.FloatField()),
                ('TeamMotivationSituationAway', models.FloatField()),
                ('TeamMotivationSituationHome', models.FloatField()),
                ('TeamRankAway', models.IntegerField()),
                ('TeamRankDifference', models.IntegerField()),
                ('TeamRankDivisionAway', models.IntegerField()),
                ('TeamRankDivisionDifference', models.IntegerField()),
                ('TeamRankDivisionHome', models.IntegerField()),
                ('TeamRankHome', models.IntegerField()),
                ('TeamRivalryAway', models.FloatField()),
                ('TeamRivalryHome', models.FloatField()),
                ('TeamRivalryTotal', models.FloatField()),
                ('TeamTacticsAway', models.CharField(max_length=100)),
                ('TeamTacticsGameValueAway', models.FloatField()),
                ('TeamTacticsGameValueHome', models.FloatField()),
                ('TeamTacticsHome', models.CharField(max_length=100)),
                ('TeamTacticsValueAway', models.FloatField()),
                ('TeamTacticsValueHome', models.FloatField()),
                ('Tournament', models.CharField(max_length=100)),
                ('TypeOfGame', models.CharField(max_length=100)),
                ('Week', models.IntegerField()),
                ('Winner', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AbilityRank', models.IntegerField()),
                ('AbilityRankDivision', models.IntegerField()),
                ('AverageAbility', models.FloatField()),
                ('Division', models.CharField(max_length=100)),
                ('DivisionID', models.CharField(max_length=100)),
                ('Name', models.CharField(max_length=100)),
                ('NoOfPlayers', models.IntegerField()),
                ('SeedingGroup', models.CharField(max_length=100)),
                ('Tactics', models.CharField(max_length=100)),
                ('TacticsValue', models.FloatField()),
                ('TotalAbility', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerFitnessLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Day', models.IntegerField()),
                ('LastMatchDay', models.IntegerField()),
                ('Name', models.CharField(max_length=100)),
                ('NewFitness', models.FloatField()),
                ('PreviousFitness', models.FloatField()),
                ('RecoveredFitness', models.FloatField()),
                ('TransactionID', models.IntegerField()),
                ('Week', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('PersonalityTrait', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMotivationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Day', models.IntegerField()),
                ('Motivation', models.FloatField()),
                ('Name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PlayerIn', models.CharField(max_length=100)),
                ('PreviousTeam', models.CharField(max_length=100)),
                ('TransactionID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TeamDivisionData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Division', models.CharField(max_length=100)),
                ('DivisionID', models.CharField(max_length=100)),
                ('Drawn', models.IntegerField()),
                ('GoalDifference', models.IntegerField()),
                ('GoalsConceded', models.IntegerField()),
                ('GoalsScored', models.IntegerField()),
                ('Lost', models.IntegerField()),
                ('Name', models.CharField(max_length=100)),
                ('Place', models.IntegerField()),
                ('PlayedGames', models.IntegerField()),
                ('Points', models.IntegerField()),
                ('Won', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TeamInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Arena', models.CharField(max_length=100)),
                ('Background', models.CharField(max_length=1000)),
                ('FanClub', models.CharField(max_length=100)),
                ('FanClubDescription', models.CharField(max_length=1000)),
                ('FullName', models.CharField(max_length=100)),
                ('Name', models.CharField(max_length=100)),
                ('Stadium', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TeamPrevDiv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Division', models.CharField(max_length=100)),
                ('DivisionPlace', models.IntegerField()),
                ('Name', models.CharField(max_length=100)),
                ('Season', models.CharField(max_length=100)),
            ],
        ),
    ]
